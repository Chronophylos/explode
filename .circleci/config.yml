version: 2.1
orbs: 
  rust: circleci/rust@1.6.0
default: &default
  working_directory: ~/project
  docker:
  - image: cimg/rust:1.61-node

commands:
  restore_node_module_cache:
    steps:
    - restore_cache:
        name: Restoring node_module cache
        key: package-lock-{{ checksum "package-lock.json" }}
  save_node_module_cache:
    steps:
    - save_cache:
        name: Saving node_module cache
        key: package-lock-{{ checksum "package-lock.json" }}
        paths:
        - node_modules
  restore_rustup_cache:
    steps:
    - restore_cache:
        name: Restoring rustup cache
        key: rust-{{ checksum "rust-toolchain.toml" }}
  save_rustup_cache:
    steps:
    - save_cache:
        name: Saving rustup cache
        key: rust-{{ checksum "rust-toolchain.toml" }}
        paths:
        - ~/.rustup
  restore_cargo_cache:
    steps:
    - restore_cache:
        name: Restoring cargo cache
        key: cargo-lock-{{ checksum "Cargo.lock" }}
  save_cargo_cache:
    steps:
    - save_cache:
        name: Saving cargo cache
        key: cargo-lock-{{ checksum "Cargo.lock" }}
        paths:
          - ~/.cargo

jobs:
  setup:
    <<: *default
    steps:
    - checkout
    - restore_node_module_cache
    - run:
        name: Install dependencies
        command: npm install
    - save_node_module_cache

  install_nightly_rust:
    <<: *default
    steps:
    - checkout
    - restore_rustup_cache
    - run:
        name: Show rustup home
        command: rustup show home
    - run:
        name: Install nightly Rust
        command: rustup update
    - save_rustup_cache

  lint_commit_message:
    <<: *default
    steps:
    - checkout
    - restore_node_module_cache
    - run:
        name: Define environment variable with lastest commit's message
        command: |
          echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Lint commit message
        command: echo "$COMMIT_MESSAGE" | npx commitlint
    
  test:
    <<: *default
    steps:
    - checkout
    - run:
        name: Install nextest
        command: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
    - run:
        name: Install circleci-junit-fix
        command: curl -sSL https://github.com/conradludgate/circleci-junit-fix/releases/download/v0.1.0/circleci-junit-fix-v0.1.0-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=~/.local/bin
    - restore_cargo_cache
    - restore_rustup_cache
    - run:
        name: Run tests
        command: cargo nextest run --profile ci --color alaway
    - run:
        name: Preprocess JUnit file
        command: cat target/nextest/ci/junit.xml | circleci-junit-fix > fixed-report.xml
    - save_rustup_cache
    - store_test_results:
        path: fixed-report.xml
    
  format:
    <<: *default
    steps:
    - checkout
    - restore_cargo_cache
    - restore_rustup_cache
    - run:
        name: Run rustfmt
        command: cargo fmt -- --check
    - save_rustup_cache
    
  clippy:
    <<: *default
    steps:
    - checkout
    - restore_cargo_cache
    - restore_rustup_cache
    - run:
        name: Run Clippy
        command: cargo clippy
    - save_rustup_cache
    
  build-release:
    <<: *default
    steps:
    - checkout
    - restore_cargo_cache
    - restore_rustup_cache
    - run:
        name: Build in release mode
        command: cargo build --release
    - save_rustup_cache
        

workflows:
  version: 2
  commit:
    jobs:
    - setup
    - install_nightly_rust
    - lint_commit_message: { requires: [setup] }
    - test: { requires: [install_nightly_rust] }
    - format: { requires: [install_nightly_rust] }
    - clippy: { requires: [install_nightly_rust] }
    - build-release: { requires: [install_nightly_rust] }
  
